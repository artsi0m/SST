# -*- mode: org; -*-
#+latex_compiler: xelatex
#+latex_header: \usepackage[AUTO]{polyglossia}
#+latex_header: \setmainfont{Noto Sans}
#+latex_header: \setmonofont{Iosevka}
#+latex_header: \setdefaultlanguage{russian}
#+latex_header: \usepackage{geometry}
#+latex_header: \geometry{left=15mm, top=15mm, right=20mm, bottom=20mm}
* Супер серво тестер

Я разработал Супер Серво Тестер представленный здесь, потому что дрон
над которым я работаю иногда производит неприятный запах сгоревший электроники
и медного лака, во время тестовых полётов. Мне нужен был инструмент,
чтобы помочь мне диагностировать причины подобных проблем.

В Интернете, можно найти множество схем сервотестеров для проверки
одного сервопривода. Они позволяют вам проверить, что сервопривод,
только купленный вами, функционирует правильно. Тестер представленный
здесь, развивает этот концепт. Вы не только можете проверять до 4
сервоприводов одновременно, но также тестировать электронный
регулятор хода (ESC -- Electronic Speed Control) или полётный
контроллер вместе с сервоприводами во множестве конфигураций.

Дрон для которого мне нужен Супер Серво Тестер представлен на рисунке
1 и основан на [[http://www.brokking.net/ymfc-al_main.html][1]].

** Серво Сигналы 101
Напомню, что сервопривод контролируется сигналом ШИМ с частотой
(частотой повторения импульсов) 50 Гц.  Ширина импульса (время когда
сигнал высок) должно быть в промежутке от одной до двух миллисекунд,
остальное время сигнал низок. Сервопривод находится в центральном
положении, когда ширина импульса 1,5 миллисекунды. Когда импульс
короче, сервопривод поворачивается в одном направлении (например
влево), когда длиннее, то поворачивается в другом направлении
(например вправо).

В типичной полетной системе, пять параметров должны быть проверены:
длина четырёх командных импульсов сервопривода (тяга, крен, тангаж и
рысканье), и напряжение питания.  В случае сложной схемы, например при
разработке полётного контроллера (дрона или другого типа
радиоуправляемой модели) или любого другого импульсного микшера, этот
тестер позволяет увидеть результаты работы микшера.

Обратите внимание, что в остальной части этой статьи термин
«сервопривод» может быть заменен на регулятор хода (ESC) или любое
другое устройство, которое вырабатывает и/или распознает сигналы
сервопривода.

** Характеристики и возможности

Супер Серво Тестер измеряет длительность контролирующих импульсов до
четырёх серво сигналов и предоставляет информацию о качестве
электропитания. Он может быть установлен между приемником
дистанционного управления и сервоприводами, между приёмником и
полётным контроллером дрона, или между полетным контроллером и
сервоприводами. Рисунки 2 - 6 показывают возможные конфигурации.

** Режимы работы
ССТ (Супер Серво Тестер) имеет два режима работы, выбираемых с помощью
ползункового переключателя.

*** Ручной режим:
В этом режиме ССТ генерирует импульсы для четырёх сервоприводов или
для полётного контроллера. Ширина импульсов настраивается четырьмя
потенциометрами. В этом режиме ССТ обеспечивает питанием сервоприводы
или регулятор хода (ESC) и питание модели не должно быть подключено ни
к одному из них. Напряжение питания ССТ должно быть между 7,5В и 12В.


*** Режим ввода:
В этом режиме измеряется длина импульсов приходящих из приёмника или
контроллера. Сигналы также перенаправляются к выводам ССТ для контроля
сервоприводов (или полётного контроллера). В этом режиме, ССТ,
сервоприводы (или регулятор хода ESC) управляются источником питания
модели. При этом питание не должно превышать 7.49В и ССТ не должен
быть подключен к своему собственному источнику питания.  Также, все
четыре входных канала должны быть подключены, иначе светодиод и
пищалка будут сигнализировать об ошибке.

** Режимы отображения

Дисплей показывает длительность импульсов графически четырьмя
столбчатыми гистограммами вместе с их численным значениям в
микросекундах (от 1000 мкс до 2000 мкс). Гистограммы ограничены
диапазоном от 1000 мкс до 2000 мкс, но численные значения не
ограничены. Когда значение выходит за пределы, прямоугольник
отрисовывается вокруг его численного значения. В этом случае,
светодиод начинает светиться и пищалка, если включена, издаст звук.

Дисплей также показывает значение напряжения питания сервопривода в
его рабочем режиме (ручном или ввода). Действительно, качество
источника питания важно для полётного контроллера и для безопасности
пилота и людей оценивающих его/её умения управлять.  Измеряемое
напряжение питание также обводится прямоугольником, когда его
значение ниже 4.5 Вольт. Светодиод начнёт светиться и пищалка также
издаст звук, чтобы вам не приходилось смотреть за тестером всё время.

ССТ предоставляет два режима отображения.  Стек и квадрат (смотри
рис. 7). Второй тип больше подходит для квадрокоптеров.  Расположение
потенциометра P4 во время запуска определяет режим отображения.  Когда
P4 выставлен полностью влево перед запуском, ССТ будет использовать
режим отображения «стек». Выкручивание потенциометра, полностью вправо
перед запуском выбирает квадратный режим отображения, когда устройство
включено.

** Схема

Сейчас, когда мы знаем как использовать тестер, давайте посмотрим на
схему. Она приведена на рисунке 8. Она не слишком сложная и по большей
части состоит из разъёмов. Сердце схемы — микроконтроллер ATmega328P,
точно такой же какой можно найти в плате Arduino UNO. Его тактовая
частота определяется кварцем X1, на 16 МГц, поддерживаемом конденсаторами
C5 и С6.

Четыре GPIO порта (от PB0 к PB3) подключены к входам для сервосигнала
на разъёме K1. Выходы сервосигнала (PD5, PD6, PD7 и PB4) подключены к
разъёму K2. Эти два коннектора подключены таким образом, что
стандартные кабели для сервоприводов могут быть подключены прямо.
Другими словами, триплеты пинов 1-3-5, 2-4-6, 7-9-11 и 8-20-12, все
соответствуют серво подключению.  Эти подключения обычно кодируются с
помощью цветов оранжево-красно-коричневым. Оранжевый (импульсный
сигнал) подключается к пину 1 (или 2, или 7, или 8), красный (Vcc) к
пину 3 (или 4, или 9, или 10) и коричневый (земля/GND) к пину 5 (или
6, или 11, или 12). Конечно могут быть исключения из этого правила, поэтому
сначала проверьте перед тем как что-либо подсоединять.

** Аналоговые входы

Четыре потенциометра подключены к аналоговым входам микроконтроллера
на пинах c PC0 по PC3. Напряжение питания подключено через делитель напряжения
(R4, R5 и R6) к аналоговому входу PC4. Отношение между сопротивлениями
(R4+R5) и R6 должно быть 2:1, но их абсолютные значения не критичны.
Использование трёх резисторов одного значения облегчает
их сортировку по точности

Для измерения напряжения питания микроконтроллера Аналогов-Цифровому
Преобразователю (АЦП) необходимо опорное напряжение, отдельное от
напряжения питания. В ATMega328P есть встроенный источник опорного
напряжения на 1,1В, но это значение несколько мало. Поэтому я
использовал D2, LM385-2,5 как опорное напряжение в 2,5 Вольта. Этот
компонент более точен, чем простой двухтерменированный зенеровский
диод, что позволяет улучшить качество измерения питания сервоприводов
до 1% или 2% вместо 5% в случае обычного зенеровского диода.

Обратите внимание, что D2 поставляется в высокой упаковке.  Чтобы
сохранить низкий профиль итоговой сборки, компонент может быть
установлен на ПП в сложенном виде. С другой стороны его можно использовать как 
опорную шпильку для дисплея.

Измеренное напряжение источника питания не должно превышать 7,49В, так
как максимальное входное напряжение микроконтроллера всего 5 Вольт.
Таким образом, источник питания для передатчика и сервоприводов
никогда не должен превысить это значение.

** Проблемы с дисплеем
Основанный на SSD1306, I2C OLED дисплей подключается к коннектору K4.
I2C порт дисплея подключен к пинам PD01 и PD1 микроконтроллера, вместо
I2C порта микроконтроллера. Шина I2С эмулируется программно.  Так
сделано потому что на ATmega328P I2C шина находится на том же пине,
что и аналоговый вход PC4 используемый для измерения напряжения.
Таким образом, встроенная I2С периферия не может быть здесь использована.


R9, R10 - подтягивающие резисторы для шины I2C.  Официально они должны
иметь значение где-то в 4,7кОМ, но 10кОм тоже подходят и экономят
строчку в перечне элементов, так как большинство остальных резисторов
также имеют сопротивление в 10кОм.

Заметьте, что коннектор K4 рисуется как 8-пиновый коннектор с двумя
рядами, но на печатной плате вы должны установить однорядный 4-пиновй
коннектор (socket) в положении либо 'A', либо 'B', не в обоих.
Положение зависит от вашего дисплея. Эти дисплеи имеют пины GND и VCC
на третьем и четвертом пине, но не всегда в том же порядке.  K4A и
K4B позволяют использовать оба типа. Использование двойного
посадочного места (футпринта), вместо (паяных) перемычек занимает
меньше места на плате и позволяет сэкономить на две (паяные)
перемычки.  Неудобство, конечно, заключается в том, что положение
отверстия для дисплея в корпусе зависит от дисплея, поскольку K4A и
K4B находятся не в одном и том же месте. Также, в зависимости от
производителя, размер дисплее может отличаться.  Поэтому, вы должны
выбрать дисплей перед выбором соответствующего корпуса.

** Выбор режима работы

Ползунковый переключатель S1, типа DPDT выбирает режим работы Супер
Серво Тестера. В /ручном/ режиме, он подключает напряжение питания в
5В к серво коннекторам. В режиме /ввода/, напряжения питания ССТ это
напряжение Vbatt (напряжение батареи), так что его собственное
напряжение в 5В должно быть отключено, для избежания конфликтов.  На
самом деле, вы должны отключить питание ССТ, в этом режиме, но так как
«it's better to be safe than sorry» (лучше быть безопасным, чем
извиняющимся -- сложная для перевода идиома прим.ред.), S1 отключает
питание для вас.  Зенеровский диод D3 совместно с резистором R8
используется, чтобы удостовериться, что питание ко всей схеме,
полученное из Vbatt не превышает максимального значения,
поддерживаемого другими компонентами. Расположение S1 считывается PD4,
так что микроконтроллер может выбрать соответствующим режим работы.

Строго говоря, S1 не должен обязтальено быть типа DPDT, но он должен
быть способен передать мощность (power) потребляемую четырьмя
серовприводами и даже больше, если к выходам подключен регулятор хода
(ESC) или полётный контроллер. Подходящие DPDT переключатель обычно
дешевле чем однополярного типа, что объясняет почему они были
использованы здесь.

** Прочее
GPIO порты PD2 микроконтроллер управляет сигнализирующими светодиодом и
пищалкой. Поскольку они соединены параллельно, MOSFET T1 обеспечивает
дополнительную мощность, чтобы управлять ими обоими без не перегружая
MCU.  S2 - это второй ползунковый переключатель, используемый для
отключения звукового сигнала, так как иногда он может немного
раздражать. Этот переключатель - маленький, маломощного типа.

Источник питания на 5 Вольт для ССТ в /ручном режиме/ получает питание
из классического лиенйного регулятора напряжения 7805 (IC1).
Удостоверьтесь, что используется его тип идущий в корпусе TO220, так
как он должен запитывать четыре сервопривода. Чтобы сохранить итоговую
сборку низкой, C1 и C2 могут быть размещены в лежачем положении.

Наконец, разъем K3, коробочного типа, предназначенный для
программирования микроконтроллера без извлечения его из схемы. Он
подключается так же, как и разъем Arduino ICSP (внутрисхемное
последовательное программирование).

** Несколько слов о программном обеспечении

Для этого проекта, я использовал Arduino IDE, что доказывает, что эта
интегрированная среда разработки, может быть использована для сложных
проектов. Сначала я собрал proof-of-concept (экскизный проект) c
Arduino UNO и макетной платой. Когда всё работало, как планировалось,
я загрузил программ в итоговое устройство через коннектор ICSP.
Заметьте, что программируя микроконтроллер по ICSP подключенный к К3,
ничего не должно быть подключено к коннекторам K1 и K2, так как эти
коннекторы делят общий сигнал с K3.

Все библиотеки нужные для проекта включены в [[https://www.elektormagazine.com/labs/super-servo-tester][3]], кроме Cерво библиотеки
(Servo library), являются частью Arduino IDE. Проект состоит из трёх
файлов: Display.ino, Inputs.ino и файла основного скетча
(эскиза/Arduino sketch).  Имена файлов достаточно понятны, чтобы
понять, что в них находится.  Основной файл скетча содержит функции
=setup= и =loop=, но также и процедуры прерывания, используемые для
определения времени входных импульсов.  Изменения уровня входных
сигналов вызывают прерывания с переключением выводов.  Таким образом,
функцию =micros()= можно использовать для измерения длины импульсов
Измеренные значения ширины импульсов копируются на выход и передаются
в функции отображения для печати. На рисунке 9 показан высокоуровневый
обзор потоков сигналов внутри микроконтроллера.

** Использование библиотеки OLED_I2C
Как упомянуто выше, OLED дисплей управляется по шине I2C. На
Atmega328P, эта шина находится на одном пине с АЦП. PC4 может быть
либо пином SDA, либо аналоговым вводом A4. Чтобы это обойти I2C шина
эмулируется программно. Библиотека OLED_I2C от Rinky-Dink Electronics
[[http://www.rinkydinkelectronics.com/index.php][2]] даёт такую возможность и также позволяет нам назначить любой
GPIO порт шине I2C.

Я вынужден был немного модифицировать файл =OLED_I2C.cpp= этой
библиотеки, так как неккоректная директива =include= припятствовала
компиляции. Замените строку 25 с
#+begin_src C
  #include "hardware/avr/HW_AVR.h"
#+end_src
на
#+begin_src C
  #include "HW_AVR.h"
#+end_src

Также, в файле =HW_AVR.h= в функции =OLED::update()= я
закомментировал строчку 24: =//noInterrupts();= Это необходимо, так
как прерывания используются сервоприводом для генерации сигналов 50 Гц
ШИМ на выводах SST. Они должны также быть включены для измерения
поступающих импульсов.

** Перед включением питания

Если потенциометр P1 в своем минимальном расположении (повёрнут влево)
при включении, экран показывает белый кадр.  Это поможет расположить
вырез для экрана и позволит отрегулировать отверстие при
необходимости. Не у всех есть дома станок с ЧПУ. Поверните P1 в центр,
чтобы чтобы вернуться к нормальной работе.

Аналогично, если P4 в своём минимальном положении при включении, дисплей
будет использовать режим стека (стопки). Если P4 в своём максимуме при
включении, то дисплей будет работать режиме квадрата. Во втором
случае, это означает, что мотор подключенный к выводу 4 быедт на
полной скорости на старте.

** Время взлетать

Super Servo Tester было очень интересно проектировать и разрабатывать,
и это полезный инструмент, который нужно иметь под рукой, если вы
увлекаетесь дронами и квадрокоптерами или RC-моделированием в
целом. Этот проект не только помог мне усовершенствовать навыки
программирования, но теперь я наконец-то могу достать свой дрон,
который с нетерпением ждет, когда же он взлетит!
